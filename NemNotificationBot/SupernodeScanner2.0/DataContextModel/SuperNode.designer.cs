#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SupernodeScanner2._0.DataContextModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SupernodeScannerDB")]
	public partial class SuperNodeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSuperNode(SuperNode instance);
    partial void UpdateSuperNode(SuperNode instance);
    partial void DeleteSuperNode(SuperNode instance);
    #endregion
		
		public SuperNodeDataContext() : 
				base(global::SupernodeScanner2._0.Properties.Settings.Default.SupernodeScannerDBConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public SuperNodeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperNodeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperNodeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SuperNodeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SuperNode> SuperNodes
		{
			get
			{
				return this.GetTable<SuperNode>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SuperNodes")]
	public partial class SuperNode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NodeID;
		
		private string _IP;
		
		private System.Nullable<int> _LastTest;
		
		private long _OwnedByUser;
		
		private string _DepositAddress;
		
		private int _SNodeID;
		
		private string _Alias;
		
		private System.Nullable<System.DateTime> _WentOffLine;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNodeIDChanging(int value);
    partial void OnNodeIDChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnLastTestChanging(System.Nullable<int> value);
    partial void OnLastTestChanged();
    partial void OnOwnedByUserChanging(long value);
    partial void OnOwnedByUserChanged();
    partial void OnDepositAddressChanging(string value);
    partial void OnDepositAddressChanged();
    partial void OnSNodeIDChanging(int value);
    partial void OnSNodeIDChanged();
    partial void OnAliasChanging(string value);
    partial void OnAliasChanged();
    partial void OnWentOffLineChanging(System.Nullable<System.DateTime> value);
    partial void OnWentOffLineChanged();
    #endregion
		
		public SuperNode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NodeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NodeID
		{
			get
			{
				return this._NodeID;
			}
			set
			{
				if ((this._NodeID != value))
				{
					this.OnNodeIDChanging(value);
					this.SendPropertyChanging();
					this._NodeID = value;
					this.SendPropertyChanged("NodeID");
					this.OnNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTest", DbType="Int")]
		public System.Nullable<int> LastTest
		{
			get
			{
				return this._LastTest;
			}
			set
			{
				if ((this._LastTest != value))
				{
					this.OnLastTestChanging(value);
					this.SendPropertyChanging();
					this._LastTest = value;
					this.SendPropertyChanged("LastTest");
					this.OnLastTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnedByUser", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OwnedByUser
		{
			get
			{
				return this._OwnedByUser;
			}
			set
			{
				if ((this._OwnedByUser != value))
				{
					this.OnOwnedByUserChanging(value);
					this.SendPropertyChanging();
					this._OwnedByUser = value;
					this.SendPropertyChanged("OwnedByUser");
					this.OnOwnedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepositAddress", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string DepositAddress
		{
			get
			{
				return this._DepositAddress;
			}
			set
			{
				if ((this._DepositAddress != value))
				{
					this.OnDepositAddressChanging(value);
					this.SendPropertyChanging();
					this._DepositAddress = value;
					this.SendPropertyChanged("DepositAddress");
					this.OnDepositAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNodeID", DbType="Int NOT NULL")]
		public int SNodeID
		{
			get
			{
				return this._SNodeID;
			}
			set
			{
				if ((this._SNodeID != value))
				{
					this.OnSNodeIDChanging(value);
					this.SendPropertyChanging();
					this._SNodeID = value;
					this.SendPropertyChanged("SNodeID");
					this.OnSNodeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alias", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Alias
		{
			get
			{
				return this._Alias;
			}
			set
			{
				if ((this._Alias != value))
				{
					this.OnAliasChanging(value);
					this.SendPropertyChanging();
					this._Alias = value;
					this.SendPropertyChanged("Alias");
					this.OnAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WentOffLine", DbType="DateTime")]
		public System.Nullable<System.DateTime> WentOffLine
		{
			get
			{
				return this._WentOffLine;
			}
			set
			{
				if ((this._WentOffLine != value))
				{
					this.OnWentOffLineChanging(value);
					this.SendPropertyChanging();
					this._WentOffLine = value;
					this.SendPropertyChanged("WentOffLine");
					this.OnWentOffLineChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
