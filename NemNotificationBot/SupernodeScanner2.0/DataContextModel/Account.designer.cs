#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SupernodeScanner2._0.DataContextModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SupernodeScannerDB")]
	public partial class AccountDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    #endregion
		
		public AccountDataContext() : 
				base(global::SupernodeScanner2._0.Properties.Settings.Default.SupernodeScannerDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AccountDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EncodedAddress;
		
		private long _OwnedByUser;
		
		private System.Nullable<long> _LastBlockHarvestedHeight;
		
		private string _LastTransactionHash;
		
		private bool _CheckTxs;
		
		private bool _CheckBlocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEncodedAddressChanging(string value);
    partial void OnEncodedAddressChanged();
    partial void OnOwnedByUserChanging(long value);
    partial void OnOwnedByUserChanged();
    partial void OnLastBlockHarvestedHeightChanging(System.Nullable<long> value);
    partial void OnLastBlockHarvestedHeightChanged();
    partial void OnLastTransactionHashChanging(string value);
    partial void OnLastTransactionHashChanged();
    partial void OnCheckTxsChanging(bool value);
    partial void OnCheckTxsChanged();
    partial void OnCheckBlocksChanging(bool value);
    partial void OnCheckBlocksChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedAddress", DbType="VarChar(60) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EncodedAddress
		{
			get
			{
				return this._EncodedAddress;
			}
			set
			{
				if ((this._EncodedAddress != value))
				{
					this.OnEncodedAddressChanging(value);
					this.SendPropertyChanging();
					this._EncodedAddress = value;
					this.SendPropertyChanged("EncodedAddress");
					this.OnEncodedAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnedByUser", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long OwnedByUser
		{
			get
			{
				return this._OwnedByUser;
			}
			set
			{
				if ((this._OwnedByUser != value))
				{
					this.OnOwnedByUserChanging(value);
					this.SendPropertyChanging();
					this._OwnedByUser = value;
					this.SendPropertyChanged("OwnedByUser");
					this.OnOwnedByUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBlockHarvestedHeight", DbType="BigInt")]
		public System.Nullable<long> LastBlockHarvestedHeight
		{
			get
			{
				return this._LastBlockHarvestedHeight;
			}
			set
			{
				if ((this._LastBlockHarvestedHeight != value))
				{
					this.OnLastBlockHarvestedHeightChanging(value);
					this.SendPropertyChanging();
					this._LastBlockHarvestedHeight = value;
					this.SendPropertyChanged("LastBlockHarvestedHeight");
					this.OnLastBlockHarvestedHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastTransactionHash", DbType="VarChar(64)")]
		public string LastTransactionHash
		{
			get
			{
				return this._LastTransactionHash;
			}
			set
			{
				if ((this._LastTransactionHash != value))
				{
					this.OnLastTransactionHashChanging(value);
					this.SendPropertyChanging();
					this._LastTransactionHash = value;
					this.SendPropertyChanged("LastTransactionHash");
					this.OnLastTransactionHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckTxs", DbType="Bit NOT NULL")]
		public bool CheckTxs
		{
			get
			{
				return this._CheckTxs;
			}
			set
			{
				if ((this._CheckTxs != value))
				{
					this.OnCheckTxsChanging(value);
					this.SendPropertyChanging();
					this._CheckTxs = value;
					this.SendPropertyChanged("CheckTxs");
					this.OnCheckTxsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckBlocks", DbType="Bit NOT NULL")]
		public bool CheckBlocks
		{
			get
			{
				return this._CheckBlocks;
			}
			set
			{
				if ((this._CheckBlocks != value))
				{
					this.OnCheckBlocksChanging(value);
					this.SendPropertyChanging();
					this._CheckBlocks = value;
					this.SendPropertyChanged("CheckBlocks");
					this.OnCheckBlocksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
